<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.4.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2017-05-16T12:20:16+07:00</updated><id>http://localhost:4000/</id><title type="html">Olarn R. Pages</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</subtitle><entry><title type="html">INT107-2016 Computing Platform 2016 System Setup Project</title><link href="http://localhost:4000/int107/project/2017/05/14/INT107-2016-project.html" rel="alternate" type="text/html" title="INT107-2016 Computing Platform 2016 System Setup Project" /><published>2017-05-14T06:50:35+07:00</published><updated>2017-05-14T06:50:35+07:00</updated><id>http://localhost:4000/int107/project/2017/05/14/INT107-2016-project</id><content type="html" xml:base="http://localhost:4000/int107/project/2017/05/14/INT107-2016-project.html">&lt;p&gt;Deadline: 26 May 2017 Midnight&lt;/p&gt;

&lt;h2 id=&quot;project-summary&quot;&gt;Project Summary:&lt;/h2&gt;

&lt;p&gt;Create one &lt;em&gt;Amazon EC2 t2.micro instance&lt;/em&gt; from Amazon Linux AMI. Install docker and create docker image with Apache2 from Ubuntu 12.04 base image. Setup the web server in docker container to host your INT106 project and restart the container every time the instance is restarted.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;สร้าง Amazon EC2 instance โดยใช้ Amazon Linux AMI&lt;/li&gt;
  &lt;li&gt;ติดตั้ง docker และสร้าง docker image ที่มี Apache2 โดยใช้ Ubuntu 12.04 เป็น base image&lt;/li&gt;
  &lt;li&gt;ติดตั้งให้ Apache2 server แสดงงานโปรเจคในวิชา INT106 และให้ restart docker container นี้ทุกครั้งที่ restart  instance นี้&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;project-instructions&quot;&gt;Project Instructions:&lt;/h2&gt;

&lt;h3 id=&quot;1-สร้างบัญชี-aws-educate-starter-account-ที่-aws-educate&quot;&gt;1 สร้างบัญชี AWS Educate Starter Account ที่ &lt;a href=&quot;https://www.awseducate.com/Application?apptype=student&quot;&gt;&lt;em&gt;AWS Educate&lt;/em&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;เลือก &lt;em&gt;King Mongkut’s University of Technology Thonburi&lt;/em&gt;, &lt;em&gt;Thailand&lt;/em&gt;, &lt;em&gt;Bangkok&lt;/em&gt;, &lt;em&gt;IT&lt;/em&gt;, …&lt;/li&gt;
  &lt;li&gt;ระบุบัญชี email ของคณะ&lt;/li&gt;
  &lt;li&gt;เลือกสร้างบัญชี &lt;em&gt;AWS Educate Starter Account&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;เมื่อสมัครแล้ว จะต้องยืนยัน email ด้วยการระบุ &lt;em&gt;verification code&lt;/em&gt; ที่ได้รับทาง email&lt;/li&gt;
  &lt;li&gt;เมื่อ verify email ผ่าน จะต้องรอทาง AWS สร้างบัญชีให้ โดยใช้เวลาประมาณ 3 วันทำการ&lt;/li&gt;
  &lt;li&gt;เมื่อทาง ​AWS ยืนยันการสมัคร จะได้รับ email ‘AWS Educate Application Approved’ ให้เปิดเอกสารแนบ และคลิ๊กไปที่ลิ้งค์ตั้งรหัสผ่าน&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;2-เข้าใช้งาน-aws-ec2&quot;&gt;2 เข้าใช้งาน AWS EC2&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;ใช้งาน AWS ผ่าน &lt;em&gt;AWS Educate Student Portal&lt;/em&gt; (link อยู่ใน email ที่ได้รับ) และคลิ๊กที่ “Go to your AWS Educate Starter Account” ระบบจะ redirect ไปที่หน้า QWIKLABS&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;ให้กด “Start Lab” และกด “OPEN CONSOLE” &lt;br /&gt;
     &lt;img src=&quot;/assets/2016_INT107_Project_QWIKLABS2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;ในหน้า AWS Management Console ให้เลือกไปหน้า EC2 &lt;br /&gt;
     &lt;img src=&quot;/assets/2016_INT107_Project_AWS_services2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;3-สร้าง-ec2-instance&quot;&gt;3 สร้าง EC2 instance&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;กด Launch Instance &lt;br /&gt;
     &lt;img src=&quot;/assets/2016_INT107_Project_AWS_create_instance1.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;เลือก Amazon Linux AMI 2017.03.0 (HVM), SSD Volume Type
     &lt;img src=&quot;/assets/2016_INT107_Project_AWS_create_instance2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;เลือก t2.micro แล้วกด Review and Launch&lt;br /&gt;
     &lt;img src=&quot;/assets/2016_INT107_Project_AWS_create_instance3.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;กด Edit security groups &lt;br /&gt;
     &lt;img src=&quot;/assets/2016_INT107_Project_AWS_create_instance4.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;เลือกสร้าง security group ใหม่ ตั้งชื่อเป็น WebServer และกด Add Rule เพิ่ม http แล้วกด Review and Launch &lt;br /&gt;
     &lt;img src=&quot;/assets/2016_INT107_Project_AWS_create_instance5.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;เลือก Edit Tags &lt;br /&gt;
     &lt;img src=&quot;/assets/2016_INT107_Project_AWS_create_instance6.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;กด Add Tag เพิ่ม Tag ชื่อ Name ตั้งชื่อเป็น Docker: Apache Server แล้วกด Review and Launch &lt;br /&gt;
     &lt;img src=&quot;/assets/2016_INT107_Project_AWS_create_instance7.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;กด Launch เลือกสร้าง key pair ใหม่ ชื่อ ‘&lt;em&gt;id9xxx&lt;/em&gt;’ โดยให้ &lt;em&gt;xxx&lt;/em&gt; เป็นเลขท้ายสามตัวของรหัสนักศึกษา แล้วกด Download Key Pair &lt;strong&gt;ต้องใช้ Key Pair นี้ในการเข้าถึงตัว server&lt;/strong&gt; &lt;br /&gt;
     &lt;img src=&quot;/assets/2016_INT107_Project_AWS_create_instance8.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;กด Launch Instance หากสร้างสำเร็จ จะแสดงรูปดังนี้ &lt;br /&gt;
     &lt;img src=&quot;/assets/2016_INT107_Project_AWS_create_instance9.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;4-จัดการ-ec2-instance&quot;&gt;4 จัดการ EC2 instance&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;ที่หน้า EC2 Console เลือก Instances หากสร้าง instance สำเร็จ จะแสดงรายการ instance ที่สร้างใหม่ โดยจะอยู่ในสถานะ running &lt;br /&gt;
 		&lt;img src=&quot;/assets/2016_INT107_Project_AWS_instance_management1.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;เมื่อเลือก instance และกดปุ่ม Actions จะแสดงเมนูที่สามารถทำได้ หากเลือกไปที่ Instance State ระบบจะแสดงสถานะของ instance ที่สามารถเปลี่ยนได้ โดยหากไม่ได้ใช้ instance อยู่ แนะนำให้ปิด instance ด้วยการเปลี่ยนสถานะเป็น Stop เพื่อที่จะได้ไม่ต้องเสียเครดิตค่าใช้ หากต้องการลบ instance ให้เลือก Terminate&lt;br /&gt;
 		&lt;img src=&quot;/assets/2016_INT107_Project_AWS_instance_management2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;5-ติดตั้ง-docker-และสร้าง-docker-image&quot;&gt;5 ติดตั้ง docker และสร้าง docker image&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;เชื่อมต่อกับ server ที่สร้างผ่านทาง ssh &lt;a href=&quot;http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AccessingInstances.html&quot;&gt;คู่มือเชื่อมต่อ&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;ติดตั้ง docker &lt;a href=&quot;http://docs.aws.amazon.com/AmazonECS/latest/developerguide/docker-basics.html#install_docker&quot;&gt;คู่มือติดตั้ง docker&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;ตั้งค่าให้ run docker service ทุกครั้งที่เปิด instance นี้ ศึกษาแนวทางจาก&lt;a href=&quot;http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/install-LAMP.html&quot;&gt;คู่มือติดตั้ง LAMP Server&lt;/a&gt; &lt;strong&gt;ไม่ต้องติดตั้งตามคู่มือ!&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;สร้าง docker image จาก Ubuntu 12.04 และติดตั้ง Apache2 ศึกษาได้จาก&lt;a href=&quot;http://docs.aws.amazon.com/AmazonECS/latest/developerguide/docker-basics.html#docker_hub_create_upload&quot;&gt;คู่มือสร้าง docker image&lt;/a&gt; หมายเหตุ: ไม่จำเป็นต้องสร้าง docker hub account และไม่ต้อง upload ขึ้น docker hub&lt;/li&gt;
  &lt;li&gt;รับ docker image ที่สร้าง โดยกำหนดให้รันทุกครั้งที่เปิด instance นี้ &lt;a href=&quot;https://docs.docker.com/engine/reference/run/#restart-policies---restart&quot;&gt;คู่มือการรัน docker&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;ทดสอบว่า apache server บน docker ทำงานอยู่ โดยไปที่ public IP ของ EC2 instance&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;6-upload-int106-project-to-docker-container&quot;&gt;6 upload INT106 project to docker container&lt;/h3&gt;

&lt;p&gt;ให้ศึกษาวิธี upload เข้า docker container ด้วยตนเอง ตรวจสอบว่า server แสดง page ได้&lt;/p&gt;

&lt;h3 id=&quot;7-ส่งงาน&quot;&gt;7 ส่งงาน&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Stop EC2 instance&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;สร้าง instance image โดยเลือก instance แล้วกดปุ่ม Actions -&amp;gt; Image -&amp;gt; Create Image
     &lt;img src=&quot;/assets/2016_INT107_Project_AWS_create_image1.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;ตั้งชื่อ image เป็น ‘&lt;em&gt;id9xxx-docker&lt;/em&gt;’ โดยให้ &lt;em&gt;xxx&lt;/em&gt; เป็นเลขท้ายสามตัวของรหัสนักศึกษา กำหนด Image description เป็นรหัสนักศึกษา &lt;br /&gt;
     &lt;img src=&quot;/assets/2016_INT107_Project_AWS_create_image2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;กดสร้าง image เมื่อสำเร็จจะแสดงหน้าต่างดังรูป หมายเหตุ: ใช้เวลาในการสร้าง image 
     &lt;img src=&quot;/assets/2016_INT107_Project_AWS_create_image3.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;ในหน้า Console เลือก Images: AMIs ระบบจะแสดงรายการ image ที่มี ให้เลือก image ที่เพิ่งสร้าง กด Actions และเลือก Modify Image Permissions &lt;br /&gt;
     &lt;img src=&quot;/assets/2016_INT107_Project_AWS_create_image4.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;ในช่อง AWS Account Number ให้ระบุ &lt;em&gt;626235537384&lt;/em&gt; และกดปุ่ม Add Permission และกด Save&lt;br /&gt;
     &lt;img src=&quot;/assets/2016_INT107_Project_AWS_create_image5.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Refresh หน้าจอ และตรวจสอบที่ Permission Tab ว่าแสดง AWS Account Number ที่เพิ่มสิทธิ์แล้ว
     &lt;img src=&quot;/assets/2016_INT107_Project_AWS_create_image6.png&quot; alt=&quot;Image&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><summary type="html">Deadline: 26 May 2017 Midnight</summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:4000/jekyll/update/2017/05/14/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2017-05-14T06:50:35+07:00</published><updated>2017-05-14T06:50:35+07:00</updated><id>http://localhost:4000/jekyll/update/2017/05/14/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2017/05/14/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry></feed>